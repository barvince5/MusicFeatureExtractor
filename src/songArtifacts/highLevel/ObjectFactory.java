/* Copyright 2013 Antonio Collarino, Vincenzo Barone

This file is part of Music Feature Extractor (MFE).

Music Feature Extractor (MFE) is free software; you can redistribute it 
and/or modify it under the terms of the GNU Lesser General Public License 
as published by the Free Software Foundation; either version 3 of the 
License, or (at your option) any later version.

Music Feature Extractor (MFE) is distributed in the hope that it will be 
useful, but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser 
General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Music Feature Extractor (MFE).  If not, see 
http://www.gnu.org/licenses/.  */

// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.06.15 at 11:38:35 AM CEST 
//


package songArtifacts.highLevel;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the songArtifacts.highLevel package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _SongMetadata_QNAME = new QName("https://github.com/AntonioCollarino/MusicFeatureExtractor.git", "SongMetadata");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: songArtifacts.highLevel
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link SongType }
     * 
     */
    public SongType createSongType() {
        return new SongType();
    }

    /**
     * Create an instance of {@link ArtistType }
     * 
     */
    public ArtistType createArtistType() {
        return new ArtistType();
    }

    /**
     * Create an instance of {@link AlbumType }
     * 
     */
    public AlbumType createAlbumType() {
        return new AlbumType();
    }

    /**
     * Create an instance of {@link AlbumListType }
     * 
     */
    public AlbumListType createAlbumListType() {
        return new AlbumListType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SongType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "https://github.com/AntonioCollarino/MusicFeatureExtractor.git", name = "SongMetadata")
    public JAXBElement<SongType> createSongMetadata(SongType value) {
        return new JAXBElement<SongType>(_SongMetadata_QNAME, SongType.class, null, value);
    }

}
